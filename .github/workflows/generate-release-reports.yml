name: Reports Generation

# Generate new reports release on tag creation, only if semantic
# versioning is respected.
on:
  push:
    tags:
      - '*.*.*'

jobs:
  ReportsGeneration:
    runs-on: ubuntu-18.04
    steps:
      - name: Checkout repository
        uses: actions/checkout@v2
        with:
          fetch-depth: 0

      - name: Merge PPS markdown files
        id: ppsreportfiles
        run: |
          echo "::set-output name=PPS_REPORT_FILES::$(printf '"%s" ' src/markdown/pps-report/*.md)"

      - name: Merge LSS markdown files
        id: lssreportfiles
        run: |
            echo "::set-output name=LSS_REPORT_FILES::$(printf '"%s" ' src/markdown/lss-report/*.md)"

      - name: Create output directory
        run: mkdir report

      - name: PPS report generation
        uses: docker://pandoc/latex:2.11.3.2
        with:
          args: -F pandoc-crossref --output=report/PPSReport.pdf  ${{ steps.ppsreportfiles.outputs.PPS_REPORT_FILES }}

      - name: LSS report generation
        uses: docker://pandoc/latex:2.11.3.2
        with:
         args: -F pandoc-crossref --output=report/LSSReport.pdf  ${{ steps.lssreportfiles.outputs.LSS_REPORT_FILES }}

      - name: Get the version
        id: getversion
        run: echo ::set-output name=VERSION::${GITHUB_REF/refs\/tags\//}

      - name: Check if pre-release
        id: checkprerelease
        run: |
          if [[ ${{ steps.getversion.outputs.VERSION }} =~ ^[0-9]+\.[0-9]+\.[0-9]+$ ]]; then
             echo ::set-output name=PRERELEASE::false
          else
             echo ::set-output name=PRERELEASE::true
          fi

      - name: Create Release
        id: create-release
        uses: actions/create-release@v1
        env:
         GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
         tag_name: ${{ steps.getversion.outputs.VERSION }}
         release_name: Release ${{ steps.getversion.outputs.VERSION }}
         prerelease: ${{ steps.checkprerelease.outputs.PRERELEASE }}

      - name: Upload Release Reports
        uses: dwenegar/upload-release-assets@v1
        env:
         GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
         release_id: ${{ steps.create-release.outputs.id }}
         assets_path: report
